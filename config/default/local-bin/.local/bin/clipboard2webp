#!/usr/bin/env zsh

local help temp res

local usage=(
    'Optimizes image in clipboard and converts to webp\n'
    'Usage:'
    '\tclipboard2webp [-h|--help]'
)

local depsList=(
    'ffmpeg'
)

zparseopts -D -F \
    {h,-help}=help ||
    { printf -l "${(@)usage}" && exit 1 }

[[ -z $help ]] || { print -l "${(@)usage}" && exit 0 }

function readClipboardToFile() {
    local file="$1"
    [[ -f $file ]] || { echo '[!] No target file found' && exit 2 }

    osascript \
        -e 'set theImage to the clipboard as «class PNGf»' \
        -e "set theFile to open for access POSIX file \"$file\" with write permission" \
        -e 'write theImage to theFile' \
        -e 'close access theFile' &>/dev/null
}

function convert() {
    local input="$1"
    local target="$2"
    [[ -n $input && -n $target ]] || { echo '[!] No input or target provided' && exit 2 }

    ffmpeg -i "$input" "$target"
}

function writeImageToClipboard() {
    local image="$1"
    [[ -f $image ]] || { echo '[!] No image found' && exit 2 }

    osascript -e "set the clipboard to (read (POSIX file \"$image\") as «class PNGf»)"
}

function checkDeps() {
    [[ ${#@} != 0 ]] || { echo '[!] No deps passed' && exit 2 }

    local failed

    for dep in "$@"; do
        type "$dep" &>/dev/null || { echo "[!] No $dep found" && failed=1 }
    done

    [[ -z $failed ]] || { exit 1 }
}

function main() {
    checkDeps "${(@)depsList}"

    temp="$(mktemp -t clipboard.XXXXXXXXXX)"
    res="$temp.webp"
    trap '(unlink "$temp"; unlink "$res") &>/dev/null' EXIT INT

    readClipboardToFile "$temp" || { echo '[!] Can not convert to image type' && exit 1 }
    convert "$temp" "$res" || { echo '[!] Convertion to webp failed' && exit 1 }
    writeImageToClipboard "$res"
}

main
